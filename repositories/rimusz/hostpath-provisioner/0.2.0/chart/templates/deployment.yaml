apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "hostpath-provisioner.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "hostpath-provisioner.name" . }}
    helm.sh/chart: {{ include "hostpath-provisioner.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hostpath-provisioner.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hostpath-provisioner.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ if .Values.rbac.create }}{{ include "hostpath-provisioner.fullname" . }}{{ else }}{{ .Values.rbac.serviceAccountName | quote }}{{ end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: PV_DIR
              value: /mnt/hostpath
            - name: PV_RECLAIM_POLICY
              value: {{ .Values.storageClass.reclaimPolicy }}
          volumeMounts:
            - name: pv-volume
              mountPath: /mnt/hostpath
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: pv-volume
          hostPath:
            path: /mnt/hostpath
