# Default values for istio-chart.
# Use with Kubernetes 1.7+
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

# Common settings.
global:
  proxy:
    repository: ibmcom/istio-proxy
    tag: 0.7.1
    imagePullPolicy: IfNotPresent
  
  proxyInit:
    repository: ibmcom/istio-proxy_init
    tag: 0.7.1
    imagePullPolicy: IfNotPresent

  # Not recommended for user to configure this. Kubectl image to use when creating custom resources
  kubectl:
    repository: ibmcom/istio-kubectl
    tag: v1.10.0
    imagePullPolicy: IfNotPresent
  
  # Install istio CA.
  securityEnabled: true
  
  # controlPlaneMtls enabled. Will result in delays starting the pods while secrets are
  # propagated, not recommended for tests.
  controlPlaneSecurityEnabled: true
  
  # Default mtls policy. If true, mtls between services will be enabled by default.
  mtls:
    # Default setting for service-to-service mtls. Can be set explicitly using
    # destination rules or service annotations.
    enabled: true
  
  # create RBAC resources. Must be set for any cluster configured with rbac.
  rbacEnabled: true
  
  imagePullSecrets:
    # - myRegistrKeySecretName
    
  # Default is 10 second
  refreshInterval: 10s

#
# ingress configuration
#
ingress:
  enabled: true
  serviceAccountName: default
  autoscaleMin: 2
  autoscaleMax: 8
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  service:
    nodePort:
      enabled: false
      port: 32000
  # Specify(true or false) whether to scheduled to management node with label: "management"="true" :
  management: true
  # Specify(true or false) whether to scheduled to dedicated node as addon :
  dedicated: true
  criticalAddonsOnly: true
  # Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
  #   0 - Do not use
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: "2 - No preference"
    ppc64le: "2 - No preference"
    s390x: "2 - No preference"

#
# sidecar-injector configuration
#
sidecar-injector:
  enabled: false
  serviceAccountName: default # used only if RBAC is not enabled
  replicaCount: 1
  image:
    repository: ibmcom/istio-sidecar_injector
    tag: 0.7.1
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # Specify(true or false) whether to scheduled to management node with label: "management"="true" :
  management: true
  # Specify(true or false) whether to scheduled to dedicated node as addon :
  dedicated: true
  criticalAddonsOnly: true
  # Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
  #   0 - Do not use
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: "2 - No preference"
    ppc64le: "2 - No preference"
    s390x: "2 - No preference"
  
  # istio egress capture whitelist
  # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly
  # example: includeIPRanges: "172.30.0.0/16,172.20.0.0/16"
  # would only capture egress traffic on those two IP Ranges, all other outbound traffic would
  # be allowed by the sidecar
  includeIPRanges: {}

#
# mixer configuration
#
mixer:
  enabled: true
  serviceAccountName: default # used only if RBAC is not enabled
  replicaCount: 1
  image:
    repository: ibmcom/istio-mixer
    tag: 0.7.1
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # Specify(true or false) whether to scheduled to management node with label: "management"="true" :
  management: true
  # Specify(true or false) whether to scheduled to dedicated node as addon :
  dedicated: true
  criticalAddonsOnly: true
  # Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
  #   0 - Do not use
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: "2 - No preference"
    ppc64le: "2 - No preference"
    s390x: "2 - No preference"
  prometheusStatsdExporter:
    repository: ibmcom/prom-statsd-exporter
    tag: v0.5.0
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

#
# pilot configuration
#
pilot:
  enabled: true
  serviceAccountName: default # used only if RBAC is not enabled
  replicaCount: 1
  image:
    repository: ibmcom/istio-pilot
    tag: 0.7.1
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # Specify(true or false) whether to scheduled to management node with label: "management"="true" :
  management: true
  # Specify(true or false) whether to scheduled to dedicated node as addon :
  dedicated: true
  criticalAddonsOnly: true
  # Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
  #   0 - Do not use
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: "2 - No preference"
    ppc64le: "2 - No preference"
    s390x: "2 - No preference"

#
# security configuration
#
security:
  serviceAccountName: default # used only if RBAC is not enabled
  replicaCount: 1
  image:
    repository: ibmcom/istio-ca
    tag: 0.7.1
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # Specify(true or false) whether to scheduled to management node with label: "management"="true" :
  management: true
  # Specify(true or false) whether to scheduled to dedicated node as addon :
  dedicated: true
  criticalAddonsOnly: true
  # Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
  #   0 - Do not use
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: "2 - No preference"
    ppc64le: "2 - No preference"
    s390x: "2 - No preference"

#
# addons configuration
#
grafana:
  enabled: false
  replicaCount: 1
  image:
    repository: ibmcom/istio-grafana
    tag: 0.7.1
    pullPolicy: IfNotPresent
  service:
    name: http
    type: ClusterIP
    externalPort: 3000
    internalPort: 3000
  ingress:
    enabled: false
    # Used to create an Ingress record.
    hosts:
      - grafana.local
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: grafana-tls
      #   hosts:
      #     - grafana.local
  
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # Specify(true or false) whether to scheduled to management node with label: "management"="true" :
  management: true
  # Specify(true or false) whether to scheduled to dedicated node as addon :
  dedicated: true
  criticalAddonsOnly: true
  # Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
  #   0 - Do not use
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: "2 - No preference"
    ppc64le: "2 - No preference"
    s390x: "2 - No preference"

prometheus:
  enabled: false
  replicaCount: 1
  image:
    repository: ibmcom/prometheus
    tag: v2.0.0
    pullPolicy: IfNotPresent
  service:
    nodePort:
      enabled: false
      port: 32090
  ingress:
    enabled: false
    # Used to create an Ingress record.
    hosts:
      - prometheus.local
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: prometheus-tls
      #   hosts:
      #     - prometheus.local
  resources:
    limits:
      cpu: 100m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 256Mi
  # Specify(true or false) whether to scheduled to management node with label: "management"="true" :
  management: true
  # Specify(true or false) whether to scheduled to dedicated node as addon :
  dedicated: true
  criticalAddonsOnly: true
  # Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
  #   0 - Do not use
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: "2 - No preference"
    ppc64le: "2 - No preference"
    s390x: "2 - No preference"

servicegraph:
  enabled: false
  replicaCount: 1
  image:
    repository: ibmcom/istio-servicegraph
    tag: 0.7.1
    pullPolicy: IfNotPresent
  service:
    name: http
    type: ClusterIP
    externalPort: 8088
    internalPort: 8088
  ingress:
    enabled: false
    # Used to create an Ingress record.
    hosts:
      - servicegraph.local
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: servicegraph-tls
      #   hosts:
      #     - servicegraph.local
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # Specify(true or false) whether to scheduled to management node with label: "management"="true" :
  management: true
  # Specify(true or false) whether to scheduled to dedicated node as addon :
  dedicated: true
  criticalAddonsOnly: true
  # Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
  #   0 - Do not use
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: "2 - No preference"
    ppc64le: "2 - No preference"
    s390x: "2 - No preference"
  # prometheus addres
  prometheusAddr: http://prometheus:9090

zipkin:
  enabled: false
  replicaCount: 1
  image:
    repository: ibmcom/zipkin
    tag: 2.6.0
    pullPolicy: IfNotPresent
  service:
    name: http
    type: ClusterIP
    externalPort: 9411
    internalPort: 9411
  ingress:
    enabled: false
    # Used to create an Ingress record.
    hosts:
      - zipkin.local
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: zipkin-tls
      #   hosts:
      #     - zipkin.local
  resources:
    limits:
      cpu: 4000m
      memory: 2048Mi
    requests:
      cpu: 100m
      memory: 512Mi
  # Specify(true or false) whether to scheduled to management node with label: "management"="true" :
  management: true
  # Specify(true or false) whether to scheduled to dedicated node as addon :
  dedicated: true
  criticalAddonsOnly: true
  # Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
  #   0 - Do not use
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: "2 - No preference"
    ppc64le: "2 - No preference"
    s390x: "2 - No preference"
