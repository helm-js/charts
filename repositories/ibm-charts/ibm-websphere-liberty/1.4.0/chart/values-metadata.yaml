image:
  __metadata:
    label: "Image"
  repository:
    __metadata:
      name: "repository"
      label: "Repository"
      description: "Dcker image location"
      type: "string"
      immutable: false
      required: true
  tag:
    __metadata:
      name: "tag"
      label: "Tag"
      description: "Docker image tag"
      type: "string"
      immutable: false
      required: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Defaults to 'Always' when the latest tag is specified. Otherwise the default is 'IfNotPresent'."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  license:
    __metadata:
      name: "license"
      label: "License"
      description: "The license state of the image being deployed. Empty (default) for development or 'accept' if you have previously accepted the production license."
      type: "string"
      immutable: false
      required: false
      options:
      - label: "development"
        value: ""
      - label: "accept"
        value: "Accept"

# Service
service:
  __metadata:
    label: "Service"
  type:
    __metadata:
      name: "type"
      label: "Service Type"
      description: "Type of service"
      type: "string"
      immutable: false
      required: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  name:
    __metadata:
      name: "name"
      label: "Name"
      description: "The name of the service"
      type: "string"
      immutable: false
      required: true
  port:
    __metadata:
      name: "port"
      label: "Port"
      description: "The port that the container will expose"
      type: "number"
      immutable: false
      required: true
  targetPort:
    __metadata:
      name: "targetPort"
      label: "Target port"
      description: "A service can map an incoming port to the targetPort."
      type: "string"
      immutable: false
      required: false

ssl:
  __metadata:
    label: "SSL settings"
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable SSL"
      description: "Specifices whether SSL is enabled. Set to true if SSL will be enabled via generated SSL configuration or if Liberty is configured to use SSL in the Docker image."
      type: "boolean"
      immutable: false
      required: true
  useClusterSSLConfiguration:
    __metadata:
      name: "useClusterSSLConfiguration"
      label: "Use cluster SSL configuration"
      description: "Set to true if you want to use the generated SSL configmap and secrets. This setting requires you to check 'Create cluster SSL configuration' the very first use. The benefit of reusing the generated SSL configuration between multiple Liberty servers is so that they can easily communicate with each other over SSL. Set to false if the Docker image already has SSL configured."
      type: "boolean"
      immutable: false
      required: true
  createClusterSSLConfiguration:
    __metadata:
      name: "createClusterSSLConfiguration"
      label: "Create cluster SSL configuration"
      description: "Specifies whether to generate Liberty SSL configmap and secrets to be used in the cluster. Only generate the SSL configuration one time. If you generate the configuration a second time, errors might occur."
      type: "boolean"
      immutable: false
      required: true

ingress:
  __metadata:
    label: "Ingress settings"
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable ingress"
      description: "Specifies whether to use Ingress."
      type: "boolean"
      immutable: false
      required: true
  secureBackends:
    __metadata:
      name: "secureBackends"
      label: "Secure backends"
      description: "By default, NGINX uses the HTTP protocol to reach the services. Turning on secureBackends changes the protocol to HTTPS."
      type: "boolean"
      immutable: false
      required: true
  rewriteTarget:
    __metadata:
      name: "rewriteTarget"
      label: "Rewrite target"
      description: "In some scenarios the exposed URL in the backend service differs from the specified path in the Ingress rule. Without a rewrite any request will return 404. To circumvent this, you can set rewrite target to the path expected by the service."
      type: "string"
      immutable: false
      required: true
  path:
    __metadata:
      name: "path"
      label: "path"
      description: "Path must match the content of an incoming request before the loadbalancer directs traffic to the backend."
      type: "string"
      immutable: false
      required: true

# Persistence
persistence:
  __metadata:
    label: "Persistence"
  name:
    __metadata:
      name: "name"
      label: "Name"
      description: "A prefix for the name of the persistence volume claim (PVC). A PVC will not be created unless either 'Persist logs' or 'Persist transaction logs' is checked."
      type: "string"
      immutable: false
      required: true
  size:
    __metadata:
      name: "size"
      label: "Size"
      description: "Size of the volume to hold all the persisted data."
      type: "string"
      immutable: false
      required: true
  useDynamicProvisioning:
    __metadata:
      name: "useDynamicProvisioning"
      label: "Use dynamic provisioning"
      description: "If true, the persistent volume claim will use the storageClassName to bind the volume. If storageClassName is not set, it will use the default storageClass setup by kube Administrator.  If false, the selector will be used for the binding process."
      type: "boolean"
      immutable: false
      required: true
  storageClassName:
    __metadata:
      name: "storageClassName"
      label: "Storage class name"
      description: "Specifies a StorageClass pre-created by the sysadmin. When set to \"\", then the PVC is bound to the default storageClass setup by the Kube administrator."
      type: "string"
      immutable: false
      required: false
  selector.label:
    __metadata:
      name: "selector.label"
      label: "Selector label"
      description: "When matching a PV, the label is used to find a match on the key."
      type: "string"
      immutable: false
      required: false
  selector.value:
    __metadata:
      name: "selector.value"
      label: "Selector value"
      description: "When matching a PV, the value is used to find a match on the value."
      type: "string"
      immutable: false
      required: false

# Logs
logs:
  __metadata:
    label: "Logs"
  persistLogs:
    __metadata:
      name: "persistLogs"
      label: "Persist logs"
      description: "When true, the logs will be persisted to the volume bound according to the persistence parameters."
      type: "boolean"
      immutable: false
      required: true
  persistTransactionLogs:
    __metadata:
      name: "persistTransactionLogs"
      label: "Persist transaction logs"
      description: "Set to true to enable transaction log recovery. The transaction logs will be persisted to the volume bound according to the persistence parameters."
      type: "boolean"
      immutable: false
      required: true
  consoleFormat:      
    __metadata:
      name: "consoleFormat"
      label: "Console logging format"
      description: "Specifies container log output format."
      type: "string"
      default: json
      immutable: false
      required: true
      options:
      - label: "json"
        value: "json"
      - label: "basic"
        value: "basic"
  consoleLogLevel:      
    __metadata:
      name: "consoleLogLevel"
      label: "Console logging level"
      description: "Controls the granularity of messages that go to the container log."
      type: "string"
      default: info
      immutable: false
      required: true
      options:
      - label: "info"
        value: "info"
      - label: "audit"
        value: "audit"
      - label: "warning"
        value: "warning"
      - label: "error"
        value: "error"
      - label: "off"
        value: "off"
  consoleSource:      
    __metadata:
      name: "consoleSource"
      label: "Console logging sources"
      description: "Specify sources that are written to the container log. Use a comma separated list for multiple sources."
      type: "string"
      default: message,trace,accessLog,ffdc
      immutable: false
      required: true

microprofile:
  __metadata:
    label: "Microprofile settings"
  health.enabled:
    __metadata:
      name: "health.enabled"
      label: "Enable health"
      description: "Specifies whether to use the MicroProfile health endpoint (`/health`) as a readiness probe of the container."
      type: "boolean"
      immutable: false
      required: true

replicaCount:
  __metadata:
    name: "replicaCount"
    label: "Number of replicas"
    description: "The number of desired replica pods that run simultaneously."
    type: "number"
    default: 1
    immutable: false
    required: true

autoscaling:
  __metadata:
    label: "Automatically scale pods"
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable automatic scaling"
      description: "Specifies whether a horizontal pod autoscaler (HPA) is deployed. Note that enabling this field disables the Number of replicas field."
      type: "boolean"
      immutable: false
      required: true
  targetCPUUtilizationPercentage:
    __metadata:
      name: "targetCPUUtilizationPercentage"
      label: "Target CPU utilization percentage"
      description: "Target average CPU utilization (represented as a percentage of requested CPU) over all the pods."
      type: "number"
      default: 50
      immutable: false
      required: true
  minReplicas:
    __metadata:
      name: "minReplicas"
      label: "Minimum number of replicas"
      description: "Lower limit for the number of pods that can be set by the autoscaler."
      type: "number"
      default: 1
      immutable: false
      required: true
  maxReplicas:
    __metadata:
      name: "maxReplicas"
      label: "Maximum number of replicas"
      description: "Upper limit for the number of pods that can be set by the autoscaler.  Cannot be lower than the minimum number of replicas."
      type: "number"
      default: 10
      immutable: false
      required: true

resources:
  __metadata:
    label: "Resources"
  constraints.enabled:
    __metadata:
      name: "constraints.enabled"
      label: "Enable contraints"
      description: "Specifies whether the resource constraints in this Helm chart are enabled."
      type: "boolean"
      immutable: false
      required: true
  limits.cpu:
    __metadata:
      name: "limits.cpu"
      label: "Maximum CPU"
      description: "Describes the maximum amount of CPU allowed."
      type: "string"
      default: "50m"
      immutable: false
      required: false
  limits.memory:
    __metadata:
      name: "limits.memory"
      label: "Maximum memory"
      description: "Describes the maximum amount of memory allowed."
      type: "string"
      default: "512Mi"
      immutable: false
      required: false
  requests.cpu:
    __metadata:
      name: "requests.cpu"
      label: "Minimum CPU"
      description: "Describes the minimum amount of CPU required. Cooresponds to requests.cpu in Kubernetes. If not specified it will default to maximum CPU (if specified) or otherwise implementation-defined value."
      type: "string"
      default: "500m"
      immutable: false
      required: false
  requests.memory:
    __metadata:
      name: "requests.memory"
      label: "Minimum memory"
      description: "Describes the minimum amount of memory required. Cooresponds to requests.memory in Kubernetes. If not specified it will default to maximum memory (if specified) or otherwise implementation-defined value."
      type: "string"
      default: "512Mi"
      immutable: false
      required: false

## Arch metadata
arch:
  __metadata:
    label: "Architecture scheduling preferences"
  amd64:
    __metadata:
      name: "amd64"
      label: "amd64"
      description: "Architecture preference for target worker node."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"

  ppc64le:
    __metadata:
      name: "ppc64le"
      label: "ppc64le scheduling preference"
      description: "Architecture preference for target worker node."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"

  s390x:
    __metadata:
      name: "s390x"
      label: "s390x scheduling preference"
      description: "Architecture preference for target worker node."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"
