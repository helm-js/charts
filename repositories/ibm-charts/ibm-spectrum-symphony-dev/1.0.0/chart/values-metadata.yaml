## Metadata for IBM Spectrum Symphony configuration
## This metadata augments value.yaml to drive configuration of the Helm chart installation from the IBM Cloud Private cluster management console.

## Image configuration metadata
image:
  __metadata:
    label: "Docker image"
  repository:
    __metadata:
      label: "Repository"
      description: "Repository for the IBM Spectrum Symphony image"
      type: "string"
  tag:
    __metadata:
      label: "Tag"
      description: "Tag for the IBM Spectrum Symphony image"
      type: "string"
  pullPolicy:
    __metadata:
      label: "Pull policy"
      description: "Always, Never, or IfNotPresent; defaults to Always"
      type: "string"
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"

## Arch metadata for github.com charts
## comment out or remove if github.ibm chart
arch:
  __metadata:
    label: "Architecture scheduling preferences"
  amd64:
    __metadata:
      label: "AMD64"
      description: "Architecture preference for target worker node when your cluster is a hybrid of Linux and Linux on POWER nodes"
      type: "string"
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"
  ppc64le:
    __metadata:
      label: "PPC64LE"
      description: "Architecture preference for target worker node when your cluster is a hybrid of Linux and Linux on POWER nodes"
      type: "string"
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"

cluster:
  __metadata:
    label: "Cluster configuration"
  clusterName:
    __metadata:
      label: "Cluster name"
      description: "Name of the IBM Spectrum Symphony cluster"
      type: "string"
  enableSSHD:
    __metadata:
      label: "Enable internal SSH daemon"
      description: "Enable SSH daemon internally on management and compute nodes to access these nodes from the client node when client deployment is enabled"
      type: "boolean"
  generateClusterAdminPassword:
    __metadata:
      label: "Generate Cluster Admin Password"
      description: "When SSH daemon is enabled, generates random password for the cluster administrator user (egoadmin) on each host and prints it to the host log"
      type: "boolean"
  productVersion:
    __metadata:
      label: "Product Version"
      description: "Product Version"
      type: "string"
      immutable: true
      hidden: true
  pvc:
    __metadata:
      label: "Persistent volume claim"
    size:
      __metadata:
        label: "Size of shared storage"
        description: "Size of shared storage for deployment - optional field dependent on workload"
        type: "string"
    useDynamicProvisioning:
      __metadata:
        label: "Use dynamic storage provisioning"
        description: "Use dynamic provisioning for shared storage"
        type: "boolean"
    storageClassName:
      __metadata:
        label: "Name of storage class"
        description: "Name of the storage class for dynamic provisioning"
        type: "string"
    existingClaimName:
      __metadata:
        label: "Name of existing claim name"
        description: "Name of an existing persistent volume claim if not using dynamic provisioning"
        type: "string"
    selector:
      label:
        __metadata:
          label: "Claim selector label"
          description: "When matching a pre-existing persistent volume, the label used to find a match on the keySelector label"
          type: "string"
      value:
        __metadata:
          label: "Claim selector value"
          description: "When matching a pre-existing persistent volume, the label used to find a match on the values"
          type: "string"

master:
  __metadata:
    label: "Management hosts"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "Number of deployment replicas on master"
      type: "number"
  regenSSLCert:
    __metadata:
      label: "Regenerate SSL certificate"
      description: "Regenerate SSL certificate using new host name and domain"
      type: "boolean"
  uiEnabled:
    __metadata:
      label: "Enable the webgui service"
      description: "Enable the webgui service to access the browser-based cluster management console"
      type: "boolean"
  egoRestEnabled:
    __metadata:
      label: "Enable the egorest service"
      description: "Enable the egorest service to access the RESTful APIs for resource management"
      type: "boolean"
  symRestEnabled:
    __metadata:
      label: "Enable the symrest service"
      description: "Enable the symrest service to access the RESTful APIs for client workload submission"
      type: "boolean"
  logsOnShared:
    __metadata:
      label: "Save logs on shared directory"
      description: "Save logs on mounted shared directory for access by containers across multiple worker nodes"
      type: "boolean"
  resources:
    requests:
      cpu:
        __metadata:
          label: "CPU request"
          description: "Initial CPU resource request for master"
          type: "string"
      memory:
        __metadata:
          label: "Memory request"
          description: "Initial memory resource request for master"
          type: "string"
    limits:
      cpu:
        __metadata:
          label: "CPU limit"
          description: "CPU resource limit on master"
          type: "string"
      memory:
        __metadata:
          label: "Memory limit"
          description: "Memory resource limit on master"
          type: "string"

compute:
  __metadata:
    label: "Compute hosts"
  replicaCount:
    __metadata:
      label: "Replica count"
      description: "Number of deployment replicas on compute"
      type: "number"
  resources:
    __metadata:
      label: "Resources"
    requests:
      cpu:
        __metadata:
          label: "CPU request"
          description: "Initial CPU resource request for compute"
          type: "string"
      memory:
        __metadata:
          label: "Memory request"
          description: "Initial memory resource request for compute"
          type: "string"
    limits:
      cpu:
        __metadata:
          label: "CPU limit"
          description: "CPU resource limit on compute"
          type: "string"
      memory:
        __metadata:
          label: "Memory limit"
          description: "Memory resource limit on compute"
          type: "string"
  minReplicas:
    __metadata:
      label: "Min replicas"
      description: "Minimum number of deployment replicas on compute - optional field dependent on workload"
      type: "number"
  maxReplicas:
    __metadata:
      label: "Max replicas"
      description: "Maximum number of deployment replicas on compute - optional field dependent on workload"
      type: "number"
  usePodAutoscaler:
    __metadata:
      label: "Enable compute hosts horizontal pod autoscaler"
      description: "Enable horizontal autoscaling for compute host pod based on CPU utilization threshold"
      type: "boolean"
  targetCPUUtilizationPercentage:
    __metadata:
      label: "Target CPU utilization percentage for autoscaler"
      description: "Target CPU utilization percentage when horizontal autoscaling is enabled for compute host pod"
      type: "number"

client:
  __metadata:
    label: "Client hosts"
  enabled:
    __metadata:
      label: "Enable client deployment"
      description: "Enable client deployment for access to the cluster from the client node"
      type: "boolean"
  sshdPort:
    __metadata:
      label: "SSH daemon port"
      description: "Port number of the client SSH daemon (defaults to 2222); if image.tag is set to 7.2.0.2, set this value to 22 for backwards compatibility"
      type: "number"
  resources:
    __metadata:
      label: "Resources"
    requests:
      cpu:
        __metadata:
          label: "CPU request"
          description: "Initial CPU resource request for client"
          type: "string"
      memory:
        __metadata:
          label: "Memory request"
          description: "Initial memory resource request for client"
          type: "string"
    limits:
      cpu:
        __metadata:
          label: "CPU limit"
          description: "CPU resource limit on client"
          type: "string"
      memory:
        __metadata:
          label: "Memory limit"
          description: "Memory resource limit on client"
          type: "string"
