## Metadata for ibm-cem configuration
## This metadata is used to augment the value.yaml to drive ICP UI for configuration of the Helm chart installation
---
# Put properties for the charts in here, and then you can get them out in the templates.
# Notice that the microservice names are a little different here, they don't have dashes. That's because the templating language couldn't handle the - characters.

###############################################################################
## Common image variables
##
###############################################################################
# CEM-common-images->
commonimages:
  __metadata:
    label: "CEM Services Image Tags"
  ## All docker images required for this chart
  ##
  ## NOTES
  ## imagePullPolicy - Always, Never, or IfNotPresent. Defaults to Always
  ## if :latest tag is specified, or IfNotPresent otherwise.
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  ## Image tags are of the format <V.R.M>-<BuildClassifier>
  ## Where <BuildClassifier> is a timestamp based identifier which uniquely identifies
  ## a build.
  ##
  brokers:
    image:
      tag:
        __metadata:
          label: "Brokers"
          description: "Brokers image tag"
          type: "string"
          immutable: true
  cemusers:
    image:
      tag:
        __metadata:
          label: "CEM Users"
          description: "CEM Users image tag"
          type: "string"
          immutable: true
  channelservices:
    image:
      tag:
        __metadata:
          label: "Channel Services"
          description: "channelservices image tag"
          type: "string"
          immutable: true
  datalayer:
    image:
      tag:
        __metadata:
          label: "Data Layer"
          description: "Datalayer image tag"
          type: "string"
          immutable: true
  eventanalyticsui:
    image:
      tag:
        __metadata:
          label: "OMaaS UI"
          description: "eventanalyticsui image tag"
          type: "string"
          immutable: true
  eventpreprocessor:
    image:
      tag:
        __metadata:
          label: "Event Preprocessor"
          description: "eventpreprocessor image tag"
          type: "string"
          immutable: true
  incidentprocessor:
    image:
      tag:
        __metadata:
          label: "Incident Processor"
          description: "incidentprocessor image tag"
          type: "string"
          immutable: true
  notificationprocessor:
    image:
      tag:
        __metadata:
          label: "Notification Processor"
          description: "notificationprocessor image tag"
          type: "string"
          immutable: true
  integrationcontroller:
    image:
      tag:
        __metadata:
          label: "Integration Controller"
          description: "integrationcontroller image tag"
          type: "string"
          immutable: true
  normalizer:
    image:
      tag:
        __metadata:
          label: "Normalizer"
          description: "normalizer image tag"
          type: "string"
          immutable: true
  schedulingui:
    image:
      tag:
        __metadata:
          label: "Scheduling UI"
          description: "schedulingui image tag"
          type: "string"
          immutable: true
  rba:
    rbs:
      image:
        tag:
          __metadata:
            label: "IBM Runbook Automation â€“ Runbook Service"
            description: "rba-rbs image tag"
            type: "string"
            immutable: true
    as:
      image:
        tag:
          __metadata:
            label: "IBM Runbook Automation - Automation Service"
            description: "rba-as image tag"
            type: "string"
            immutable: true
  cemhelmtests:
    image:
      tag:
        __metadata:
          label: "CEM Helm Tests"
          description: "cemhelmtests image tag"
          type: "string"
          immutable: true
          visible: false


productName:
  __metadata:
    label: "CEM edition"
    description: "Name of the chart"
    type: "string"
    immutable: true
    hidden: true

## License acceptance
license:
  __metadata:
    name: "license"
    label: "Docker image license acceptance"
    description: "Must be set to \"accept\" to proceed with installation. Defaults to Not Accepted."
    type: "string"
    immutable: false
    required: true
    hidden: false
    options:
    - label: "Not Accepted"
      value: "not accepted"
    - label: "Accept"
      value: "accept"

arch:
  __metadata:
    label: "Architecture"
    type: "string"
    immutable: true
    hidden: true
    description: "Supported architecture"
    options:
      - label: "amd64"
        value: "amd64"


# CEM microservices
brokers:
  __metadata:
    label: "Brokers Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
  secrets:
    username:
      __metadata:
        label: "Credential Secret Username"
        description: "Brokers username"
        type: "string"
    password:
      __metadata:
        label: "Credential Secret Password"
        description: "Brokers password"
        type: "password"
cemusers:
  __metadata:
    label: "CEM Users Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
  secrets:
    username:
      __metadata:
        label: "Credential Secret Username"
        description: "CEM Users username"
        type: "string"
    password:
      __metadata:
        label: "Credential Secret Password"
        description: "CEM Users password"
        type: "password"
    clientid:
      __metadata:
        label: "CEM Users client ID"
        description: "clienid"
        type: "string"
    clientsecret:
      __metadata:
        label: "CEM Users client secret"
        description: "clientsecret"
        type: "string"
    oidcclientid:
      __metadata:
        label: "CEM Users OIDC client ID"
        description: "oidcclientid"
        type: "string"
      required: true
    oidcclientsecret:
      __metadata:
        label: "CEM Users OIDC client secret"
        description: "oidcclientsecret"
        type: "string"
channelservices:
  __metadata:
    label: "Channel Services Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
  secrets:
    username:
      __metadata:
        label: "Credential Secret Username"
        description: "Channel Services Username"
        type: "string"
    password:
      __metadata:
        label: "Credential Secret Password"
        description: "Channel Services Password"
        type: "password"
datalayer:
  __metadata:
    label: "Data Layer Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
eventanalyticsui:
  __metadata:
    label: "OMaaS UI Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      description: "Number of pod replicas"
      required: true
  secrets:
    session:
      __metadata:
        label: "Session secret"
        description: "Session secret"
        type: "string"
eventpreprocessor:
  __metadata:
    label: "Event Preprocessor Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
incidentprocessor:
  __metadata:
    label: "Incident Processor Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
integrationcontroller:
  __metadata:
    label: "Integration Controller Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
  secrets:
    username:
      __metadata:
        label: "Credential Secret Username"
        description: "Integration Controller Username"
        type: "string"
    password:
      __metadata:
        label: "Credential Secret Password"
        description: "Integration Controller Password"
        type: "password"
normalizer:
  __metadata:
    label: "Normalizer Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
  outgoingUseSelfsignedCert:
    __metadata:
      label: "Switch on self signed certificate"
      description: "outgoingUseSelfsignedCert"
      type: "boolean"
      default: false
      required: true
notificationprocessor:
  __metadata:
    label: "Notification Processor Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
schedulingui:
  __metadata:
    label: "Scheduling UI Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true

# RBA dependency (rbs/as)
rba:
  __metadata:
    label: "IBM Runbook Automation Services Configuration"
  rbs:
    clusterSize:
      __metadata:
        label: "Runbook Service Replica Count"
        type: "number"
        description: "Number of pod replicas"
        required: true
  as:
    clusterSize:
      __metadata:
        label: "Automation Service Replica Count"
        type: "number"
        description: "Number of pod replicas"
        required: true

# Zookeeper dependency
zookeeper:
  __metadata:
    label: "Zookeeper Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true

# Kafka dependency
kafka:
  __metadata:
    label: "Kafka Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
  ## The kafka client credentials
  client:
    username:
      __metadata:
        label: "Kafka Username"
        description: "kafka username"
        type: "string"
        hidden: true
        immutable: true
    password:
      __metadata:
        label: "Kafka Password"
        description: "kafka password"
        type: "password"
        hidden: true
        immutable: true
  ## The kafka administrative credentials
  admin:
    username:
      __metadata:
        label: "Kafka Admin Username"
        description: "kafka admin username"
        type: "string"
        hidden: true
        immutable: true
    password:
      __metadata:
        label: "Kafka Admin Password"
        description: "kafka admin password"
        type: "password"
        hidden: true
        immutable: true
  ssl:
    enabled:
      __metadata:
        label: "SSL enabled"
        description: "ssl enabled"
        type: "boolean"
        hidden: true
        immutable: true


    # SSL with kafka isn't used (yet)
    secret:
      __metadata:
        label: "Kafka TLS Secret"
        description: "kafka tls secret"
        type: "string"
        hidden: true
        immutable: true
    password:
      __metadata:
        label: "Kafka TLS password"
        description: "kafka tls password"
        type: "password"
        hidden: true
        immutable: true

# Couchdb dependency
couchdb:
  __metadata:
    label: "CouchDB Configuration"
  ## The CouchDB cluster initial cluster size
  clusterSize:
    __metadata:
      label: "Replica Count"
      type: "number"
      description: "Number of pod replicas"
      required: true
  ## If enabled, nodes are automatically added to the couchdb cluster when
  ## couchdb pods are started. Requires the default system service account for
  ## the namespace has read access to the Kubernetes endpoints API.
  autoClusterConfig:
    enabled:
      __metadata:
        label: "Auto Cluster Config"
        description: >
          Allows you to scale up the Couchbd stateful set automatically using
          the kubernetes scale command. You must give the default service
          account in your namespace read access to the kubernetes API before
          enabling this parameter. Refer to the documentation for more
          information.
        type: "boolean"

  ## The number of shards and replicas of data
  numShards:
    __metadata:
      label: "Number of shards"
      description: >
        This is equivalent to the 'q' parameter in the '[cluster]' section in
        default.ini and specifies the number of shards. See the [cluster]
        section documentation in the Couchdb document for details on this
        parameter. You are recomended to leave it as default unless you
        increase the number of stateful set replicas to 3 or more.
      type: "number"
  numReplicas:
    __metadata:
      label: "Number of replicas"
      description: >
        This is equivalent to the 'n' parameter  in the '[cluster]' section in
        default.ini and specifies the number of replicas of each document.
        See the Couchdb documentation for advice on what this should be set to.
        You are recommended to leave this as the default unless you increase
        the number of stateful set replicas to more than 3.
      type: "number"
  # The Couchdb Secret name
  secretName:
    __metadata:
      label: "CouchDB Secret Name"
      description: "couchdb secret name"
      type: "string"
      hidden: true
      immutable: true

# Redis dependency
redis:
  __metadata:
    label: "Redis Configuration"
  replicas:
    servers:
      __metadata:
        label: "Number of servers"
        description: "number of servers"
        type: "number"
    sentinels:
      __metadata:
        label: "Number of sentinels"
        description: "Number of sentinels"
        type: "number"
# <-CEM-kub-config

email:
  __metadata:
    label: "Sender Email Configuration"
  # Set this property to the Email address that should be shown as the sender (From) of the message.
  from:
    __metadata:
      label: "From"
      description: >
        Set this property to the Email address that should be
        shown as the sender (From) of the message.
      type: "string"
      required: true
  # Set this property to "smtp" to use a mail relay server. This requires setting the other smtp-prefixed properties as well.
  # Set to "direct" (default) to send directly to the recipient's server.
  # Use "api" if the "sendgrid" service is available. This requires the "apikey" property also to be set.
  type:
    __metadata:
      label: "Type"
      description: >
        Set this property to "smtp" to use a mail relay server. This requires setting the other smtp-prefixed properties as well.
        Set to "direct" (default) to send directly to the recipient's server.
        Use "api" if the "sendgrid" service is available. This requires the "apikey" property also to be set.
      type: "string"
      default: "direct"
      options:
      - label: "direct"
        value: "direct"
      - label: "smtp"
        value: "smtp"
      - label: "apikey"
        value: "apikey"
  # When "type" is set to "smtp", set this to the host name of your smtp server used for mail relay.
  smtphost:
    __metadata:
      label: "SMTP Host"
      description: >
        When "type" is set to "smtp", set this to the host name of your smtp server used for mail relay.
      type: "string"
  # When "type" is set to "smtp", set this to the port number used by the smtp server specified by the "smtphost" value.
  smtpport:
    __metadata:
      label: "STMP Port"
      description: >
        When "type" is set to "smtp", set this to the port number used by the smtp server specified by the "smtphost" value.
      type: "number"
  # When "type" is set to "smtp", set this to a valid user name for the smtp server specified by the "smtphost" value.
  smtpuser:
    __metadata:
      label: "SMTP User"
      description: >
        When "type" is set to "smtp", set this to a valid user name for the smtp server specified by the "smtphost" value.
      type: "string"
  # When "type" is set to "smtp", set this to the password for the user name defined by the "smtpuser" value.
  smtppassword:
    __metadata:
      label: "SMTP Password"
      description: >
        When "type" is set to "smtp", set this to the password for the user name defined by the "smtpuser" value.
      type: "password"
  # When "type" is set to "api", set this value to the API key required by the Sendgrid API. (Send mail authorization is required).
  apikey:
    __metadata:
      label: "API Key"
      description: >
        When "type" is set to "api", set this value to the API key required by the Sendgrid API. (Send mail authorization is required).
      type: "string"
global: # Properties in here can be accessed by the main chart and by all subcharts
# CEM-global->
  image:
    repository:
      __metadata:
        label: "Images Repository"
        description: "Link to the registry containing all CEM services images"
        type: "string"
        required: true
  masterIP:
    __metadata:
      label: "ICP Master IP"
      description: "ICP Master IP"
      type: "string"
      required: true
      validate: "\b(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\b"
  proxyIP:
    __metadata:
      label: "ICP Proxy IP"
      description: "ICP Proxy IP"
      type: "string"
      validate: "\b(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\b"
  masterPort:
    __metadata:
      label: "ICP Master Port"
      description: "ICP Master Port"
      type: "number"
      required: true
  environmentSize:
    __metadata:
      label: "Environment size"
      description: >
        Controls the resource sizes the value can be either 'size1' or 'size0'.
        Size0 is a minimal spec for evaluation or development purposes.
      type: "string"
      options:
        - label: "size0"
          value: "size0"
        - label: "size1"
          value: "size1"
  # Controls the resource sizes the value can be either 'size1' or 'size0'.
  # Size0 is a minimal spec for evaluation or development purposes.
# <-CEM-global
  cassandraNodeReplicas:
    __metadata:
      label: "Cassandra Node Replicas"
      description: "cassandra node replicas"
      type: "number"
  persistence:
    enabled:
      __metadata:
        label: "Persistence"
        description: "persistence"
        type: "boolean"
    storageClassName:
      __metadata:
        label: "Storage Class Name"
        description: "storage class name"
        type: "string"
    storageClassOption:
      # CEM-global-storage-option->
      datalayerjobs:
        __metadata:
          label: "Data Layer Jobs Storage Class Option"
          description: "datalayerjobs"
          type: "string"
          required: true
      kafkadata:
        __metadata:
          label: "Kafka Data Storage Class Option"
          description: "kafkadata"
          type: "string"
          required: true
      cassandradata:
        __metadata:
          label: "Cassandra Data Storage Class Option"
          description: "cassandradata"
          type: "string"
          required: true
      cassandrabak:
        __metadata:
          label: "Cassandra Backup Storage Class Option"
          description: "cassandrabak"
          type: "string"
          required: true
      zookeeperdata:
        __metadata:
          label: "Zookeeper Storage Class Option"
          description: "zookeeperdata"
          type: "string"
          required: true
      couchdbdata:
        __metadata:
          label: "CouchDB Data Storage Class Option"
          description: "couchdbdata"
          type: "string"
          required: true
      # <-CEM-global-storage-option
    storageSize:
      cassandradata:
        __metadata:
          label: "Cassandra Data Storage Size"
          description: "cassandradata"
          type: "string"
          required: true
      cassandrabak:
        __metadata:
          label: "Cassandra Backup Storage Size"
          description: "cassandrabak"
          type: "string"
          required: true
      couchdbdata:
        __metadata:
          label: "CouchDB Data Storage Size"
          description: "couchdbdata"
          type: "string"
          required: true
      datalayerjobs:
        __metadata:
          label: "Data Layer Jobs Storage Size"
          description: "datalayerjobs"
          required: true
  ingress:
    # global.ingress.domain must be set to the fully qualified domain name
    # (FQDN) of the CEM service. This FQDN must resolve to the IP address of
    # the ICp proxy host running the ingress controller.  This normally
    # requires a DNS entry, for testing /etc/hosts on any client host may be
    # updated.
    domain:
      __metadata:
        label: "Ingress Domain"
        description: >
          Domain must be set to the fully qualified domain name
          (FQDN) of the CEM service. This FQDN must resolve to the IP address of
          the ICp proxy host running the ingress controller.  This normally
          requires a DNS entry, for testing /etc/hosts on any client host may be
          updated.
        type: "string"
        required: true
    # If global.ingress.tlsSecret is the empty string CEM will use the default
    # TLS certificate installed on the ingress controller. If this certificate
    # does not match the value of global.ingress.domain browsers and other
    # clients will raise security warnings.
    # For production use a TLS certificate for the FQDN should be obtained from
    # a well known certificate authority and installed in a TLS secret in the
    # name space. global.ingress.tlsSecret must be set to the name of this
    # secret.
    tlsSecret:
      __metadata:
        label: "Ingress TLS secret"
        description: >
          If tlsSecret is the empty string CEM will use the default
          TLS certificate installed on the ingress controller. If this certificate
          does not match the value of Domain browsers and other
          clients will raise security warnings.
          For production use a TLS certificate for the FQDN should be obtained from
          a well known certificate authority and installed in a TLS secret in the
          namespace. tlsSecret must be set to the name of this
          secret.
        type: "string"
    # If multiple releases of CEM are installed in a single ICp each should be
    # given a different FQDN, and each should have a TLS certificate installed.
    # If the same FQDN is used for each release, or tlsSecret is left empty for
    # any release, global.ingress.prefix may be used to give each a different
    # path.  E.g. if global.ingress.domain is 'cem.example.com' and
    # global.ingress.prefix is 'mycem/', the UI end point will be
    # https://cem.example.com/mycem/cemui.
    prefix:
      __metadata:
        label: "Ingress Prefix"
        description: >
          If multiple releases of CEM are installed in a single ICp each should be
          given a different FQDN, and each should have a TLS certificate installed.
          If the same FQDN is used for each release, or tlsSecret is left empty for
          any release, global.ingress.prefix may be used to give each a different
          path.  E.g. if global.ingress.domain is 'cem.example.com' and
          global.ingress.prefix is 'mycem/', the UI end point will be
          https://cem.example.com/mycem/cemui.
        type: "string"
# CEM-autocompiled-config->
# Config related to microservice container configuration
# Automatically compiled properties from makehelm will be concatenated below. There MUST be a new line at the end of this file:
cemservicebroker:
  __metadata:
    label: "CEM Service Broker Configuration"
  # Appended to names and ids in catalog to allow multiple brokers to be registered.
  suffix:
    __metadata:
      label: "Suffix"
      description: "suffix"
      type: "string"
# <-CEM-autocompiled-config
