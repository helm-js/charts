{{- if not (.Values.secretOverride) }}
apiVersion: v1
data:
  .dockercfg: "eyJuYS5jdW11bHVzcmVwby5jb20iOnsidXNlcm5hbWUiOiJ0b2tlbiIsInBhc3N3b3JkIjoiOTkxOTE5NGIwMDU3MDM0N2FmZTA1YmQzNjljN2Y3MmYiLCJlbWFpbCI6ImlkZWxpZGphQGNhLmlibS5jb20iLCJhdXRoIjoiZEc5clpXNDZPVGt4T1RFNU5HSXdNRFUzTURNME4yRm1aVEExWW1Rek5qbGpOMlkzTW1ZPSJ9fQ==" 
kind: Secret
metadata:
  name: {{ template "fullname" . }}-mariadb-secret
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"

type: kubernetes.io/dockercfg
---
{{- end }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
{{- if not (.Values.secretOverride) }}
      imagePullSecrets:
        - name: {{ template "fullname" . }}-mariadb-secret
{{- end }}
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        env:
        - name: MARIADB_USER
          value: {{ default "testuser" .Values.database.user | quote }}
        - name: MARIADB_DATABASE
          value: {{ default "" .Values.database.name | quote }}
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: mariadb
          containerPort: 3306
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: "{{ template "fullname" . }}-{{ .Values.dataVolume.name }}"
          mountPath: /database
      volumes:
      - name: "{{ template "fullname" . }}-{{ .Values.dataVolume.name }}"    
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
        {{- if .Values.dataVolume.existingClaimName }}
          claimName: {{ .Values.dataVolume.existingClaimName }}
        {{- else }}
          claimName: {{ template "fullname" . }}-{{ .Values.dataVolume.name }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
