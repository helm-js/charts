{{ if .Values.logstashProbe.enabled }}
{{- include "sch.config.init" (list . "probe.sch.chart.config.values") -}}
{{- $compName :=  .sch.chart.components.logstash.name -}}
{{ $repository := trimSuffix "/" .Values.image.repository -}}

{{/* Probe config ConfigMap Name*/}}
{{- $configName :=  .sch.chart.components.logstash.configmap.config.name -}}
{{- $configMapName := include "sch.names.fullCompName" (list . $configName) -}}

{{/* Probe rules ConfigMap Name*/}}
{{- $rulesConfigName :=  .sch.chart.components.logstash.configmap.rules.name -}}
{{- $rulesConfigMapName := include "sch.names.fullCompName" (list . $rulesConfigName) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sch.names.fullCompName" (list . $compName) | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
spec:
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      component: {{ $compName }}
  {{ if .Values.logstashProbe.autoscaling.enabled -}}
  replicas: {{ .Values.logstashProbe.autoscaling.minReplicas | default 1 }}
  {{- else -}}
  replicas: {{ .Values.logstashProbe.replicaCount }}
  {{- end }}
  minReadySeconds: 30
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 8 }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}
        checksum/config.configmap: {{ include (print $.Template.BasePath "/probe-logstash-configmap-config.yaml") . | sha256sum }}
        checksum/rules.configmap: {{ include (print $.Template.BasePath "/probe-logstash-configmap-rules.yaml") . | sha256sum }}
    spec:
      #https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          #If you specify multiple nodeSelectorTerms associated with nodeAffinity types, 
          #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
          #
          #If you specify multiple matchExpressions associated with nodeSelectorTerms, 
          #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
          #
          #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
            nodeSelectorTerms:
            - matchExpressions:
              - key: "beta.kubernetes.io/arch"
                operator: In
                values:
                {{- if .Values.arch }}
                - {{ .Values.arch }}
                {{- else }}
                - {{ template "arch" . }}
                {{ end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: release
                  operator: In
                  values:
                  - {{ .Release.Name }}
                - key: component
                  operator: In
                  values:
                  - {{ $compName }}
              topologyKey: kubernetes.io/hostname
      volumes:
        - name: interfaces-file
          configMap:
            name: {{ $configMapName }}
            items:
            - key: omni.dat
              path: omni.dat
        - name: rules-file
          configMap:
            name: {{ $rulesConfigMapName }}
            items:
            - key: message_bus.rules
              path: message_bus.rules
        - name: props-file
          configMap:
            name: {{ $configMapName }}
            items:
            - key: message_bus.props
              path: message_bus.props
        - name: transport-file
          configMap:
            name: {{ $configMapName }}
            items:
            - key: webhookTransport.properties
              path: webhookTransport.properties
      containers:
        - name: messagebus-probe-logstash
          image: "{{ $repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: LICENSE
            value: {{ .Values.license | default "not accepted" }}
          - name: PROBE_NAME
            value: "nco_p_message_bus"
          ports:
            - containerPort: 80
          volumeMounts:
          - name: interfaces-file
            mountPath: /opt/IBM/tivoli/netcool/etc/omni.dat
            subPath: omni.dat
          - name: rules-file
            mountPath: /opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/message_bus.rules
            subPath: message_bus.rules
          - name: props-file
            mountPath: /opt/IBM/tivoli/netcool/omnibus/probes/linux2x86/message_bus.props
            subPath: message_bus.props
          - name: transport-file
            mountPath: /opt/IBM/tivoli/netcool/omnibus/java/conf/webhookTransport.properties
            subPath: webhookTransport.properties
          livenessProbe:
            exec:
              command:
              - curl
              - -X
              - POST
              - -H
              - 'cache-control: no-cache'
              - -H
              - 'content-type: application/json'
              - -d
              - '{"liveness" : "probe-check"}'
              - http://localhost:80/probe/webhook/logstash
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - curl
              - -X
              - POST
              - -H
              - 'cache-control: no-cache'
              - -H
              - 'content-type: application/json'
              - -d
              - '{"readiness" : "probe-check"}'
              - http://localhost:80/probe/webhook/logstash
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{ if .Values.global.image.secretName -}}
      imagePullSecrets:
      - name: {{ .Values.global.image.secretName }}
      {{- end}}
{{- end -}}