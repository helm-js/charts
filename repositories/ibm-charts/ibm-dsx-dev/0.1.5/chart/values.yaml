###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################


###############################################################################
######################## IBM DSX Developer Edition. ###########################
###############################################################################


###############################################################################
## Common image variables
###############################################################################
image:
  ## secret for na.cumulusrepo.com is dsx-cumulus-registry-secret
  ## There are other replicas - for example, IBM internal users may prefer to use the replica inside the IBM network :
  ## For Example if using a registry: svl.cumulusrepo.com
  ## then use secret: svl-dsx-cumulus-registry-secret
  secret: "dsx-cumulus-registry-secret"

  pullPolicy: "IfNotPresent"


dsxservice:
  externalPort: 32443

###############################################################################
## Persistence Storage
###############################################################################

## Persistence is enabled by default, set Enabled: true to use
userHomePvc:
  name: "user-home-pvc"
  persistence:
    ## DSX Desktop Edition requires persistence be enabled
    # enabled: true
    #  info: "DSX requires persistence is enabled and requires that a PV exists"

    ## To use an existing claim, set useExistingClaim: true
    ## Specify the name of the Existing Claim to be used by your application
    existingClaimName:

    ## To use an existing StorageClass, set useStorageClass: true
    ## Specify the name of the StorageClass
    ## Setting StorageClass: "" will use whatever storageClass is currently
    ## setup as the Default
    storageClassName:

    ## DSX Desktop Edition requires a ReadWriteMany accessMode
    # accessMode: 'ReadWriteMany'
    #  info: "DSX requires a PV with accessMode = 'ReadWriteMany'"

    ## DSX Desktop Edition requires a Persistence Storage volume size minimum of 1Gi
    size: "1Gi"


###############################################################################
## DSX Desktop Edition UX Server Continer
###############################################################################

dsxUxServerContainer:

  ## UX Container Image regestry/endpoint and version (tag)
  image:
    repository: "na.cumulusrepo.com/homer/dsx_starter_ux"
    tag: "v1.015"

  ## UX Container resources, a minimum cpu request of "1000m" is required
  resources:
    requests:
      cpu: "1000m"
      memory: "256Mi"
    limits:
      cpu: "2000m"
      memory: "512Mi"


###############################################################################
## DSX Desktop Edition Zeppelin Continer
###############################################################################

zeppelinServerContainer:

  ## Zeppelin Container Image regestry/endpoint and version (tag)
  image:
    repository: "na.cumulusrepo.com/homer/dsx_starter_zeppelin"
    tag: "v1.015"

  ## Zeppelin Container resources, a minimum cpu request of "500m" and memory request of 2Gi is required
  resources:
    requests:
      cpu: "500m"
      memory: "2048Mi"
    limits:
      cpu: "1000m"
      memory: "4096Mi"

###############################################################################
## DSX Desktop Edition Jupyter Continer
###############################################################################

notebookServerContainer:

  ## Jupyter Container Image regestry/endpoint and version (tag)
  image:
    repository: "na.cumulusrepo.com/homer/dsx_starter_jupyter"
    tag: "v1.015"

  ## Jupyter Container resources, a minimum cpu request of "500m" and memory request of 1Gi is required
  resources:
    requests:
      cpu: "500m"
      memory: "1024Mi"
    limits:
      cpu: "1000m"
      memory: "2048Mi"


###############################################################################
## DSX Desktop Edition RStudio Continer
###############################################################################

rstudioServerContainer:

  ## RStudio Container Image regestry/endpoint and version (tag)
  image:
    repository: "na.cumulusrepo.com/homer/dsx_starter_rstudio"
    tag: "v1.015"


  ## RStudio Container resources, a minimum cpu request of "500m" and memory request of 2Gi is required
  resources:
    requests:
      cpu: "500m"
      memory: "2Gi"
    limits:
      cpu: "1000m"
      memory: "3Gi"
