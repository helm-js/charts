{{- if eq "script" .Values.tls.ca.managementMode }}
######################
# CA SECRET CREATION #
######################
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "mongodb.fullname" . }}-tls-ca-creator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "mongodb.fullname" . }}-secret-writer
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs:     ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "mongodb.fullname" . }}-tls-ca-creator
roleRef:
  apiVersion: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "mongodb.fullname" . }}-secret-writer
subjects:
- kind: ServiceAccount
  name: {{ include "mongodb.fullname" . }}-tls-ca-creator
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mongodb.fullname" . }}-create-tls-ca
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: tls-ca-creator
    spec:
      serviceAccountName: {{ include "mongodb.fullname" . }}-tls-ca-creator
      restartPolicy: Never
      volumes:
        - name: tls
          emptyDir: {}
        - name: scripts
          configMap:
            defaultMode: 0755
            name: {{ include "mongodb.fullname" . }}-scripts
            optional: false
      initContainers:
        - name: generate-tls
          image: {{ printf "%s:%s" .Values.images.tls.repository .Values.images.tls.tag }}
          imagePullPolicy: {{ .Values.images.tls.pullPolicy }}
          command: [ '/opt/mongoscripts/ca-tls.sh' ]
          env:
            - name: CA_DIR
              value: /etc/mongodb/tls
            - name: RELEASE_NAME
              value: {{ .Release.Name }}
          volumeMounts:
            - name: tls
              mountPath: /etc/mongodb/tls
            - name: scripts
              mountPath: /opt/mongoscripts
      containers:
        - name: upload-tls
          image: {{ printf "%s:%s" .Values.images.tls.repository .Values.images.tls.tag }}
          imagePullPolicy: {{ .Values.images.tls.pullPolicy }}
          command: [ '/opt/mongoscripts/uploadca.sh' ]
          args:    [ 'upload' ]
          env:
            - name: SECRET_NAME
              value: {{ include "mongodb.fullname" . }}-tls-ca
          volumeMounts:
            - name: tls
              mountPath: /etc/mongodb/tls
            - name: scripts
              mountPath: /opt/mongoscripts
{{- end }}